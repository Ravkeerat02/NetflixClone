// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions Session[]
  accounts Account[]
  favoriteIds String[] @db.ObjectId
}

model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  // ondelete - what we want it to happen
  user User @relation(fields: [userId], references: [id],onDelete: Cascade)
  userId String @db.ObjectId
  name String
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String? 
  id_token String? @db.String
  session_state String? @db.String
  @@unique([provider,providerAccountId])

}

model Session{
   id String @id @default(auto()) @map("_id") @db.ObjectId
   sessionToken String @unique
   userId String @db.ObjectId
   expires DateTime

   user User @relation(fields: [userId], references: [id],onDelete: Cascade)

}

model VerificationToken{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifer String 
  token String @unique
  expires DateTime

  @@unique([identifer,token])
}

model Movie{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String?
  description String?
  videoUrl String?
  thumbnailUrl String?
  genre String?
  duration String?
}